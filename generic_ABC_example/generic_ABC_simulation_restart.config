# ======================================================================
# PLATFORM OVERRIDE SECTION
# ======================================================================

# HOST =
# MPIRUN =
# PHYS_BIN_ROOT =
# DATA_TREE_ROOT =

# ======================================================================
# USER DATA SECTION
# ======================================================================

USER_W3_DIR = $PWD/www 
USER_W3_BASEURL = 

# ======================================================================
# ROOT LOCATION
# ======================================================================

IPS_ROOT = $IPS_PATH
IPS_COMPONENTS_ROOT = $PWD/_exec

# ======================================================================
# SIMULATION INFO SECTION
# ======================================================================

RUN_ID = model_run
RUN_COMMENT = generic_ABC_simulation

SIM_NAME = generic_ABC_sim

OUTPUT_PREFIX =
LOG_FILE = log.warning
LOG_LEVEL = WARN  # DEBUG | INFO | WARN | ERROR | CRITICAL

SIM_ROOT = $PWD
SIM_INPUT_DIR= $PWD/_inputs

SIMULATION_MODE = RESTART # NORMAL or RESTART
RESTART_TIME = LATEST # Float or LATEST
RESTART_ROOT = $SIM_ROOT

# ======================================================================
# SIMULATION STATE SECTION
# ======================================================================

# Where to put state files as the simulation evolves
STATE_WORK_DIR = $SIM_ROOT/work/state
ARCHIVE_STATE_ON_OUTPUT = TRUE

# List of files that constitute the state
STATE_FILES = X_dot_code.out Y_dot_code.out integrator.out dummy.state
# ======================================================================
# PORTS SECTION
# ======================================================================

[PORTS]

    NAMES = INIT DRIVER A_COMP B_COMP C_COMP

    # Required ports - DRIVER and INIT

    [[INIT]]
        IMPLEMENTATION = basic_init

    [[DRIVER]]
        IMPLEMENTATION = basic_driver

    [[A_COMP]]
        IMPLEMENTATION = A_comp

    [[B_COMP]]
        IMPLEMENTATION = B_comp

    [[C_COMP]]
        IMPLEMENTATION = C_comp

# ======================================================================
# COMPONENT CONFIGURATION SECTION
# ======================================================================

[basic_init]
# Machine dependent config info
    BIN_PATH = $IPS_COMPONENTS_ROOT
    SCRIPT = $BIN_PATH/basic_init.py
# Static config info
    CLASS = init
    SUB_CLASS =
    NAME = basic_init
    NPROC = 1
    INIT_HELPER_CODES = $BIN_PATH/init_helper.py
    INPUT_DIR = $SIM_INPUT_DIR/basic_init_input
    INPUT_FILES = initial_X_Y.case_1
    STATE_FILES = integrator.out X_dot_code.out Y_dot_code.out dummy.state
    COPY_FILES = initial_X_Y.case_1
    COPIED_FILES_NEW_NAMES = integrator.out
    OUTPUT_FILES =
    RESTART_FILES = $STATE_FILES

 [basic_driver]
# Machine dependent config info
    BIN_PATH = $IPS_COMPONENTS_ROOT
    SCRIPT = $BIN_PATH/basic_driver.py
# Static config info
    CLASS = driver
    SUB_CLASS =
    NAME = basic_driver
    NPROC = 1
    INPUT_FILES =
    OUTPUT_FILES =
    RESTART_FILES =
    STATE_FILES =  

[A_comp]
# Machine dependent config info
    BIN_PATH = $IPS_COMPONENTS_ROOT
    SCRIPT = $BIN_PATH/generic_component.py
    EXECUTABLE = $BIN_PATH/codes_and_helpers/generic_X_dot_code.py     # full path
# Static config info
    CLASS = A_comp
    SUB_CLASS =
    NAME = generic_component
    NPROC = 1
    STATE_FILES = integrator.out X_dot_code.out
    INPUT_DIR = $SIM_INPUT_DIR/X_dot_code_input
    INPUT_FILES = X_dot_code.in dummy.X_dot dummy.xyz
    OUTPUT_FILES = $INPUT_FILES X_dot_code.out
    RESTART_FILES = $INPUT_FILES
    PRE_RUN_COPY_FILES = dummy.X_dot dummy.xyz
    PRE_RUN_COPY_NEW_NAMES = new_dummy.X_dot new_dummy.xyz
    POST_RUN_COPY_FILES = new_dummy.X_dot
    POST_RUN_COPY_NEW_NAMES = dummy2.X_dot
    LOGFILE_NAME = X_dot_code.log
    PRE_RUN_HELPER_CODES_1 = $BIN_PATH/codes_and_helpers/A_comp_pre_run_helper_1.py
    PRE_RUN_HELPER_CODES_2 = $BIN_PATH/codes_and_helpers/A_comp_pre_run_helper_2.py
    PRE_RUN_HELPER_CODES = $PRE_RUN_HELPER_CODES_1 $PRE_RUN_HELPER_CODES_2
    POST_RUN_HELPER_CODES = $BIN_PATH/codes_and_helpers/A_comp_post_run_helper.py


[B_comp]
# Machine dependent config info
    BIN_PATH = $IPS_COMPONENTS_ROOT
    SCRIPT = $BIN_PATH/generic_component.py
    EXECUTABLE = $BIN_PATH/codes_and_helpers/generic_Y_dot_code.py     # full path
# Static config info
    CLASS = B_comp
    SUB_CLASS =
    NAME = generic_component
    NPROC = 1
    STATE_FILES = integrator.out Y_dot_code.out dummy.state
    INPUT_DIR = $SIM_INPUT_DIR/Y_dot_code_input
    INPUT_FILES = Y_dot_code.in dummy.state
    OUTPUT_FILES = $INPUT_FILES Y_dot_code.out
    RESTART_FILES = $INPUT_FILES
    LOGFILE_NAME = Y_dot_code.log
    
[C_comp]
# Machine dependent config info
    BIN_PATH = $IPS_COMPONENTS_ROOT
    SCRIPT = $BIN_PATH/generic_component.py
    EXECUTABLE = $BIN_PATH/codes_and_helpers/generic_integrator.py      # full path
# Static config info
    CLASS = C_comp
    SUB_CLASS =
    NAME = generic_component
    NPROC = 1
    INPUT_DIR = $SIM_INPUT_DIR/integrator_input
    INPUT_FILES = integrator.in
    STATE_FILES = integrator.out  X_dot_code.out Y_dot_code.out
    OUTPUT_FILES = $INPUT_FILES, integrator.out
    RESTART_FILES = $INPUT_FILES
    LOGFILE_NAME = /dev/stdout

# =============================================================================
# TIMELOOP SECTION
# =============================================================================

[TIME_LOOP]
    MODE = REGULAR
    START = $RESTART_TIME # Float or $RESTART_TIME
    FINISH = 4. # Float or $RESTART_TIME + float
    NSTEP = 2 

# =============================================================================
# CHECKPOINT SECTION
# =============================================================================

[CHECKPOINT]
   MODE = ALL
   PHYSTIME_INTERVAL = 0.5
   NUM_CHECKPOINT = -1
   PROTECT_FREQUENCY = 5
