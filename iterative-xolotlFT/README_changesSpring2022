Changes in FTRIDYN-Xolotl workflow
A. Lasa, Spring 2022


Motivation

In early 2022, the FTX wrappers have been modified to adapt the workflow to time-dependent simulations[1], and to recent developments in Xolotl[2].

[1]
we have coupled FTX to SOLPS as a first set of time-dependent simulations. This has prompted changes, such as the capability of passing time-related information (start and end time of the simulation, etc.), externally.

This also motivated replacing "GITR" parameters with "PLASMA" ones, so that the workflow is agnostic to where the inputs come from (SOLPS, GITR, hPIC, experimental, estimates...)

[2]
There're many version (compilations/executables) of Xolotl. Some parameters (and their format of the parameter file) change from the early versions to the latest. These changes were implemented in the wrappers incrementally, in a bit of a patch work (i.e., just making it work for the few users that run the workflow). This has now been improved so that just the Xolotl version (1 = initial, e.g., master ; or 2= new, e.g., tempGrid) needs to be defined. Then input parameters are formatted by the wrapper accordingly. These changes include formatting:

- tridyn.dat file
- Temperature model
- Grid model
- binTRIDYN function
- netParam / grouping
- material / fluxDepthProfile

Additionally, formatting of most of these parameters has been exported to functions that are then called from the driver, so that its implementation is cleaner and easily adaptable (e.g., if in the future we need to implement a third Xolotl version).

Here are the details of v1 vs v2 (copied from config file in ips-examples/iterative-xolotlFT):

# as of April 2022, xolotl version affects the following parameters:
# see Xolotl's wiki for the latest changes:
#       https://github.com/ORNL-Fusion/xolotl/wiki

# tridyn.dat
# choose format of tridyn.dat needed for your Xolotl executable (replace by xolotl_v)
# 1=original,         header: (1-reflection)         		for all species (He W D T)
# 2=new (2021),       header: species cluster_size (1-reflection)     only for species present in plasma
# header is followed by 15-param fit + max_depth

# grid:
# v1: grid only
# v2: gridType (nonuniform...) + gridParam

# temperature model:
# v1: one line: heat, startTemp
# v2: tempHandler (heat, constant...) + tempParam

# material:
# this is handled in the config file
# to read the implantation from file (tridyn.dat)
# v1: material = TRIDYN
#     for non W001 surfaces, need to recompile
# v2: material = W001...
#     additional parameter: fluxDepthProfile = tridyn.dat

# netParam / grouping file:
# v1: net file contains netParams, grouping and concentrations
#     --> never need these params in restart
# v2: net file only contains concentrations, not netParams of grouping
#     --> always need netParam & grouping as input paramters
# in both cases, need line networkFile = ... in:
#    restarts (automatically added)
#    start simulation loading net file -- not creating network (comment-out line networkFile = ... below)


Changes:

1.	In plasma/gitr output file (gitrOut.txt)
Replace
gitrOutputDir=/.../...
With:
plasmaOutputDir=/.../...



2.	Changes needed to ips.ftx.config are described below. However, it might be best to use the ips.ftx.config file provided in ips-examples/iterative-xolotlFT as new starting point and adapting it to your case/parameters


In the PLASMA STATE section
---------
Replace:
GITR_OUTPUT = gitrOut.txt #gitrOutputParameters.txt
---------
With:
PLASMA_OUTPUT_STD = 'gitrOut.txt'
FTX_INPUT_STD = $PLASMA_OUTPUT_STD #'ftxInput.txt'
---------

---------
Replace:
#file names in same order as plasmaSpecies in GITR's input section!!
---------
With:
#file names in same order as plasmaSpecies in PLASMAs input section!!
---------

---------
Replace:
PLASMA_STATE_FILES = $FTRIDYN_INPUT_FILES $FT_PWD_PATH $XFT_TRANSFER_FILE $XOLOTL_INPUT_FILES $XOLOTL_CURRENT_FILES $XOLOTL_FINAL_FILES $RESTART_FILES $GITR_OUTPUT #$FTRIDYN_OUTPUT_FILES
---------
With:
PLASMA_STATE_FILES = $FT_PWD_PATH $XFT_TRANSFER_FILE $XOLOTL_INPUT_FILES $XOLOTL_CURRENT_FILES $XOLOTL_FINAL_FILES $RESTART_FILES $PLASMA_OUTPUT_STD $FTX_INPUT_STD
# $FTRIDYN_OUTPUT_FILES $FTRIDYN_INPUT_FILES
---------

In [xolotl_comp]

---------
Comment out: $INPUT_DIR/param.template
---------
Add: SURFACE_FILE=$XOL_SURFACE_FILE
---------


In [xolotl-ftridyn_driver]:

---------
Add: 
PRINT_TEST='off' #on = print test lines (for devel / debug) ; off = print the std running output
---------

---------
Replace:
GITR_ANGLE_FILE = gitrFluxA.dat
GITR_AWEIGHT_FILE = gitrFluxAweight.dat
GITR_EADIST_FILE = dist, .dat ##if using energy distributions, give pattern: filename, extension ; e.g., dist, .dat --  default ['dist','dat']
GITR_OUTPUT_FILE= $GITR_OUTPUT #same as GITR_OUTPUT_FILE in driver
---------
With:
PLASMA_ANGLE_FILE = gitrFluxA.dat
PLASMA_AWEIGHT_FILE = gitrFluxAweight.dat
PLASMA_EADIST_FILE = dist, .dat ##if using energy distributions, give pattern: filename, extension ; e.g., dist, .dat --  default ['dist','dat']

PLASMA_OUTPUT_FILE= $FTX_INPUT_STD
PLASMA_OUTPUT_ORIG = $PLASMA_OUTPUT_STD
---------


In [[DRIVER_INPUT_PARAMETERS]]

---------
Add:
xolotl_v=1                             # choose xolotl version:
                                       #       1: original ; e.g., master
                                       #       2: new      ; e.g., tempGrid
[see above or in config file in ips-examples/iterative-xolotlFT for the full explanation on v1 vs v2]
---------


Move TIME parameters to its own section:

---------

[[TIME_PARAMETERS]]

#start from the beginning (INIT) or from a previous run (RESTART)
#RESTART mode requires providing a list of input files, located in the 'restart_files directory:
      #substrate composition (last_TRIDYN.dat) and 
      #Xolotl network (networkFile.h5) files                 

START_MODE=INIT                         #'INIT' or 'RESTART'        
INIT_TIME=0.0
END_TIME=5.0e-4                         #TEST VALUE: short loops for these tests; otherwirse end time 10, loop time step 0.5 (start stop~0.01)
LOOP_TIME_STEP=2.5e-4
LOOP_N=0                                #loop_N>0 if restarting from t>0

LOOP_TS_FACTOR=2                        #FACTOR = 1 to not change LOOPS_TIME_STEP
LOOP_TS_NLOOPS=2                        #multiply TIME_STEP by FACTOR every NLOOPS

---------


In [[XOLOTL_INPUT_PARAMETERS]]

---------
Replace:   
netParam=8 0 0 250 6 false  #netParam = nHe nD nT maxVSize nInterstitials phaseCut ; e.g., 8 0 0 50 6 false for ITER-He ;  8 0 0 250 6 false for PISCES, 
grouping=31 4 4             #grouping = groupHeV groupHe groupV ; grouping ON: groupHeV < MaxVSize ; e.g., 31 4 4 for ITER-He ; 31 4 1 for PISCES  
dimensions=1
burstingDepth=10
grid=367 0.5                  #TEST VALUE: small grid for tests; use full grid of 356, voidPortion 10 for full runs
voidPortion=10.0
boundary=1 1
startTemp=500.0 
#heat=5.56e-12 343
perfHandler=std
---------
with:
#netParam and grouping  - needed to create network in init for xolotl v1 & in all cases for xolotl v2
netParam=8 0 0 250 6 false              #netParam = nHe nD nT maxVSize nInterstitials phaseCut ;
                                        # e.g., 8 0 0 50 6 false for ITER-He ;  8 0 0 250 6 false for PISCES, 
grouping=31 4 4                         #grouping = groupHeV groupHe groupV ; grouping ON: groupHeV < MaxVSize
                                        # e.g., 31 4 4 for ITER-He ; 31 4 1 for PISCES
#networkFile='networkFile.h5'           # comment out this line if loading network file from INIT (not create)   
                                        # the driver adds this line if in restart mode
                                                
dimensions=1
burstingDepth=10
voidPortion=10.0
boundary=1 1
perfHandler=std

#options for xolotl v1 executables (e.g., master)
grid=367 0.5
startTemp=500.0
material=TRIDYN

#options for xolotl v2 executables (e.g., tempGrid)
# tempHandler='heat'                     # tempHanndler signals to the driver to use the 2-line temperature model
# tempParam=...                          # value of heat usually given by plasma input
# gridType=nonuniform                    # new instead of just grid
# gridParam=366 0.5                      # new instead of just grid
# material=W100
# fluxDepthProfileFilePath=tridyn.dat    #option to have depth profile being read from file (tridyn.dat)
---------

In [[FTRIDYN_INPUT_PARAMETERS]]

---------
Replace:
        #order as in plasmaSpecies of GITR
---------
With
        #order as in plasmaSpecies of PLASMA

---------
Replace:
### GITR RELATED PARAMETERS ###    
#PURPOSE: add parameters if keys don't exist in GITR's output 
#WARNING: this will overwrite GITR's output file

[[GITR_INPUT_PARAMETERS]]
---------
With:
[[PLASMA_INPUT_PARAMETERS]]
